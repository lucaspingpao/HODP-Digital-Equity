answer <- answer + (3 / (52-j)) (choose(48, j-1) / choose(52, j-1)) * (4 / (52-j+1))
} answer
answer <- 0
for(j in 1:49) {
answer <- answer + (3 / (52-j)) (choose(48, j-1) / choose(52, j-1)) * (4 / (52-j+1))
}
for(j in 1:49) {
answer <- answer + (3 / (52-j)) (choose(48, j-1) / choose(52, j-1)) * (4 / (52-j+1))
}
knitr::opts_chunk$set(echo = TRUE)
for(j in 1:49) {
answer <- answer + (3 / (52-j)) (choose(48, j-1) / choose(52, j-1)) * (4 / (52-j+1))
}
answer <- 0
for(j in 1:49) {
answer <- answer + (3 / (52-j)) (choose(48, j-1) / choose(52, j-1)) * (4 / (52-j+1))
}
answer
for(j in 1:49) {
answer <- answer + (3 / (52-j)) (choose(48, j-1) / choose(52, j-1)) * (4 / (52-j+1))
}
answer <- 0
for(j in 1:49) {
answer <- answer + (3 / (52-j)) * (choose(48, j-1) / choose(52, j-1)) * (4 / (52-j+1))
}
answer
answer <- 0
for(j in 1:49) {
answer <- answer + (3 / (52-j)) * (choose(48, j-1) / choose(52, j-1)) * (4 / (52-j+1))
}
answer
98/99
# Lucas Pao, ...
# Digital Equity
library(stringr)
data <- read.csv("digital equity.csv")
names <- colnames(digitalEquityData); names
# Section 1 ---------------------------------------------------------------
adultEducation <- subset(data, str_detect(data$What.type.of.services.does.your.organization.provide...Please.select.all.that.apply., "Adult Education")); head(adultEducation)
artsAndCulture <- subset(data, str_detect(data$What.type.of.services.does.your.organization.provide...Please.select.all.that.apply., "Arts and Culture")); head(artsAndCulture)
educationK12 <- subset(data, str_detect(data$What.type.of.services.does.your.organization.provide...Please.select.all.that.apply., "Education")); head(educationK12)
homelessness <- subset(data, str_detect(data$What.type.of.services.does.your.organization.provide...Please.select.all.that.apply., "Homelessness")); head(homelessness)
humanServices <- subset(data, str_detect(data$What.type.of.services.does.your.organization.provide...Please.select.all.that.apply., "Human Services")); head(humanServices)
policy <- subset(data, str_detect(data$What.type.of.services.does.your.organization.provide...Please.select.all.that.apply., "Policy")); head(policy)
other <- subset(data, str_detect(data$What.type.of.services.does.your.organization.provide...Please.select.all.that.apply., "Other")); head(other)
internetYes <- subset(data, str_detect(data$Are.you.providing.services.that.require.that.your.clients.use.the.internet., "Yes")); head(internetYes)
internetNo <- subset(data, str_detect(data$Are.you.providing.services.that.require.that.your.clients.use.the.internet., "No")); head(internetNo)
internetMaybe <- subset(data, str_detect(data$Are.you.providing.services.that.require.that.your.clients.use.the.internet., "I")); head(internetMaybe)
deviceYes <- subset(data, str_detect(data$Are.you.providing.services.that.require.that.your.clients.to.use.a.digital.device..computer..tablet..smart.phone.., "Yes")); head(deviceYes)
deviceNo <- subset(data, str_detect(data$Are.you.providing.services.that.require.that.your.clients.to.use.a.digital.device..computer..tablet..smart.phone.., "No")); head(deviceNo)
deviceMaybe <- subset(data, str_detect(data$Are.you.providing.services.that.require.that.your.clients.to.use.a.digital.device..computer..tablet..smart.phone.., "I")); head(deviceMaybe)
sufficientAll <- subset(data, str_detect(data$Do.your.clients.have.sufficient.internet.connectivity.to.access.services.and.obtain.essentials., "All")); head(sufficientAll)
sufficientMost <- subset(data, str_detect(data$Do.your.clients.have.sufficient.internet.connectivity.to.access.services.and.obtain.essentials., "Most")); head(sufficientMost)
sufficientSome <- subset(data, str_detect(data$Do.your.clients.have.sufficient.internet.connectivity.to.access.services.and.obtain.essentials., "Some")); head(sufficientSome)
sufficientNone <- subset(data, str_detect(data$Do.your.clients.have.sufficient.internet.connectivity.to.access.services.and.obtain.essentials., "None")); head(sufficientNone)
sufficientIdk <- subset(data, str_detect(data$Do.your.clients.have.sufficient.internet.connectivity.to.access.services.and.obtain.essentials., "I")); head(sufficientAll)
# Section 2 ---------------------------------------------------------------
setwd("~/Desktop/HODP-Digital-Equity")
# Make sure to reset your working directory to HODP-Digital-Equity
# setwd("~/Desktop/HODP-Digital-Equity")
data <- read.csv("digital equity.csv")
View(data)
colnames$Your.Email <- "Email"
colnames("Your.Email") <- "Email"
colnames(data$Your.Email) <- "Email"
colnames(data$"Your.Email") <- "Email"
colnames(data)[colnames(data) == "Your.Email"] <- "Email"
colnames(data)[colnames(data) == "Your.Name"] <- "Name"
# Lucas Pao, ...
# Digital Equity
library(stringr)
# Make sure to reset your working directory to HODP-Digital-Equity
# setwd("~/Desktop/HODP-Digital-Equity")
data <- read.csv("digital equity.csv")
names <- colnames(digitalEquityData); names
colnames(data)[2] <- "Email"
colnames(data)[3] <- "Name"
colnames(data)[4] <- "Organization"
colnames(data)[5] <- "Types of Services"
# Section 1 ---------------------------------------------------------------
adultEducation <- subset(data, str_detect(data$What.type.of.services.does.your.organization.provide...Please.select.all.that.apply., "Adult Education")); head(adultEducation)
artsAndCulture <- subset(data, str_detect(data$What.type.of.services.does.your.organization.provide...Please.select.all.that.apply., "Arts and Culture")); head(artsAndCulture)
educationK12 <- subset(data, str_detect(data$What.type.of.services.does.your.organization.provide...Please.select.all.that.apply., "Education")); head(educationK12)
homelessness <- subset(data, str_detect(data$What.type.of.services.does.your.organization.provide...Please.select.all.that.apply., "Homelessness")); head(homelessness)
humanServices <- subset(data, str_detect(data$What.type.of.services.does.your.organization.provide...Please.select.all.that.apply., "Human Services")); head(humanServices)
policy <- subset(data, str_detect(data$What.type.of.services.does.your.organization.provide...Please.select.all.that.apply., "Policy")); head(policy)
other <- subset(data, str_detect(data$What.type.of.services.does.your.organization.provide...Please.select.all.that.apply., "Other")); head(other)
internetYes <- subset(data, str_detect(data$Are.you.providing.services.that.require.that.your.clients.use.the.internet., "Yes")); head(internetYes)
internetNo <- subset(data, str_detect(data$Are.you.providing.services.that.require.that.your.clients.use.the.internet., "No")); head(internetNo)
internetMaybe <- subset(data, str_detect(data$Are.you.providing.services.that.require.that.your.clients.use.the.internet., "I")); head(internetMaybe)
deviceYes <- subset(data, str_detect(data$Are.you.providing.services.that.require.that.your.clients.to.use.a.digital.device..computer..tablet..smart.phone.., "Yes")); head(deviceYes)
deviceNo <- subset(data, str_detect(data$Are.you.providing.services.that.require.that.your.clients.to.use.a.digital.device..computer..tablet..smart.phone.., "No")); head(deviceNo)
deviceMaybe <- subset(data, str_detect(data$Are.you.providing.services.that.require.that.your.clients.to.use.a.digital.device..computer..tablet..smart.phone.., "I")); head(deviceMaybe)
sufficientAll <- subset(data, str_detect(data$Do.your.clients.have.sufficient.internet.connectivity.to.access.services.and.obtain.essentials., "All")); head(sufficientAll)
sufficientMost <- subset(data, str_detect(data$Do.your.clients.have.sufficient.internet.connectivity.to.access.services.and.obtain.essentials., "Most")); head(sufficientMost)
sufficientSome <- subset(data, str_detect(data$Do.your.clients.have.sufficient.internet.connectivity.to.access.services.and.obtain.essentials., "Some")); head(sufficientSome)
sufficientNone <- subset(data, str_detect(data$Do.your.clients.have.sufficient.internet.connectivity.to.access.services.and.obtain.essentials., "None")); head(sufficientNone)
sufficientIdk <- subset(data, str_detect(data$Do.your.clients.have.sufficient.internet.connectivity.to.access.services.and.obtain.essentials., "I")); head(sufficientAll)
# Section 2 ---------------------------------------------------------------
View(data)
colnames(data)[6] <- "Clients require internet"
colnames(data)[7] <- "Clients require device"
length(colnames(data))
colnames(data)[21]
colnames(data)[21] <- "Number of clients"
section1 <- data[1:8, 21]
section1
data[1]
section1 <- data[c(1:8, 21)]
View(section1)
section1$"Number of clients"
as.numeric(section1$"Number of clients")
check.numeric(section1$"Number of clients")
as.numeric(section1$"Number of clients")
numeric <- which(as.numeric(section1[9])); numeric
section1[9]
section1[9][1]
section1[9][1]
View(section1)
numeric <- which(as.numeric(section1$"Number of clients")); numeric
numeric <- which(as.numeric(section1$"Number of clients")); numeric
which(as.numeric(section1$"Number of clients"))
as.numeric(section1$"Number of clients")
factors(section1$"Types of Services")
section1$"Types of Services"
class(section1$"Types of Services")
factor(section1$"Types of Services")
factor(section1$"Types of Services"[str_detect(section1$"Types of Services" != ",")])
factor(section1$"Types of Services"[str_detect(section1$"Types of Services" == ",")])
str_detect(section1$"Types of Services" == ",")
factor(section1$"Types of Services"[str_detect(section1$"Types of Services", ",")])
factor(section1$"Types of Services"[!str_detect(section1$"Types of Services", ",")])
section1$"Types of Services"[!str_detect(section1$"Types of Services", ",")]
section1$"Types of Services"[!str_detect(section1$"Types of Services", ",")][1] == section1$"Types of Services"[!str_detect(section1$"Types of Services", ",")][3]
factor(section1$"Types of Services"[!str_detect(section1$"Types of Services", ",")]])
factor(section1$"Types of Services"[!str_detect(section1$"Types of Services", ",")])
serviceTypes <- factor(section1$"Types of Services"[!str_detect(section1$"Types of Services", ",")]); serviceTypes
unique(serviceTypes)
serviceTypes <- unique(section1$"Types of Services"[!str_detect(section1$"Types of Services", ",")]); serviceTypes
section1$"Types of Services"
serviceTypes <- c(
"Adult Education",
"Arts and Culture",
"Community, Economic Development, Workfoce",
"Education (K-12)",
"Homelessness",
"Human Services/Mental Health",
"Policy & Advocacy",
"Other"
); serviceTypes
serviceTypes <- c(
"Adult Education",
"Arts and Culture",
"Community, Economic Development, Workfoce",
"Education (K-12)",
"Homelessness",
"Human Services/Mental Health",
"Policy & Advocacy",
"Other"
); serviceTypes
serviceTypesValues <- 1:length(serviceTypes)
for(i in serviceTypes) {
serviceTypesValues <- length(subset(section1, str_detect(section1$"Types of Services", serviceTypes[i])))
}
adultEducation <- subset(section1, str_detect(section1$"Types of Services", "Adult Education")); head(adultEducation)
serviceTypesValues
serviceTypesValues <- 1:length(serviceTypes)
for(i in serviceTypes) {
serviceTypesValues[i] <- length(subset(section1, str_detect(section1$"Types of Services", serviceTypes[i])))
}
serviceTypesValues
serviceTypesValues[1]
serviceTypesValues[2]
serviceTypesValues[3]
class(serviceTypesValues)
serviceTypesValues <- 1:length(serviceTypes); serviceTypesValues
serviceTypesValues <- 1:length(serviceTypes); serviceTypesValues[3]
serviceTypesValues <- 1:length(serviceTypes); serviceTypesValues
for(i in serviceTypes) {
serviceTypesValues[i] <- length(subset(section1, str_detect(section1$"Types of Services", serviceTypes[i])))
}
class(serviceTypesValues)
serviceTypesValues
serviceTypesValues <- 1:length(serviceTypes); serviceTypesValues
for(i in serviceTypes) {
serviceTypesValues[i] <- nrow(subset(section1, str_detect(section1$"Types of Services", serviceTypes[i])))
}
serviceTypesValues
nrow(subset(section1, str_detect(section1$"Types of Services", serviceTypes[1])))
View(adultEducation)
serviceTypesValues <- 1:length(serviceTypes); serviceTypesValues
for(i in 1:length(serviceTypes)) {
serviceTypesValues[i] <- nrow(subset(section1, str_detect(section1$"Types of Services", serviceTypes[1])))
}
serviceTypesValues
serviceTypesValues <- 1:length(serviceTypes); serviceTypesValues
for(i in 1:length(serviceTypes)) {
print(i)
serviceTypesValues[i] <- nrow(subset(section1, str_detect(section1$"Types of Services", serviceTypes[1])))
}
serviceTypesValues
serviceTypesValues <- 1:length(serviceTypes); serviceTypesValues
for(i in 1:length(serviceTypes)) {
serviceTypesValues[i] <- nrow(subset(section1, str_detect(section1$"Types of Services", serviceTypes[i])))
}
serviceTypesValues
View(section1)
serviceTypesValues <- 1:length(serviceTypes); serviceTypesValues
for(i in 1:length(serviceTypes)) {
serviceTypesValues[i] <- nrow(subset(section1, str_detect(section1$"Types of Services", serviceTypes[i])))
}
serviceTypesValues
serviceTypesValues <- 1:length(serviceTypes); serviceTypesValues
for(i in 1:length(serviceTypes)) {
serviceTypesValues[i] <- nrow(subset(section1, str_detect(section1$"Types of Services", serviceTypes[i])))
}
serviceTypesValues
for(i in 1:length(serviceTypes)) {
serviceTypesValues[i] <- nrow(subset(section1, str_detect(section1$"Types of Services", "Education")))
}
serviceTypesValues
serviceTypesValues[i] <- nrow(subset(section1, str_detect(section1$"Types of Services", "Education (K-12)")))
for(i in 1:length(serviceTypes)) {
serviceTypesValues[i] <- nrow(subset(section1, str_detect(section1$"Types of Services", "Education (K-12)")))
}
serviceTypesValues
section1$"Types of services"[5]
section1$"Types of services"
section1 <- data[c(1:8, 21)]
section1
section1$"Types of services"
section1$"Name"
section1$"Types.of.services"
colnames(section1)
# Lucas Pao, ...
# Digital Equity
library(stringr)
# Make sure to reset your working directory to HODP-Digital-Equity
# setwd("~/Desktop/HODP-Digital-Equity")
data <- read.csv("digital equity.csv")
names <- colnames(digitalEquityData); names
colnames(data)[2] <- "Email"
colnames(data)[3] <- "Name"
colnames(data)[4] <- "Organization"
colnames(data)[5] <- "Types.of.services"
colnames(data)[6] <- "Clients.require.internet"
colnames(data)[7] <- "Clients.require.device"
colnames(data)[8] <- "Sufficient.internet"
colnames(data)[21] <- "Number.of.clients"
# Section 1 ---------------------------------------------------------------
section1 <- data[c(1:8, 21)]
as.numeric(section1$"Number.of.clients")
serviceTypes <- c(
"Adult Education",
"Arts and Culture",
"Community, Economic Development, Workfoce",
"Education (K-12)",
"Homelessness",
"Human Services/Mental Health",
"Policy & Advocacy",
"Other"
); serviceTypes
serviceTypesValues <- 1:length(serviceTypes); serviceTypesValues
for(i in 1:length(serviceTypes)) {
serviceTypesValues[i] <- nrow(subset(section1, str_detect(section1$"Types.of.services", serviceTypes[i])))
}
serviceTypesValues
section1$"Types.of.services"
adultEducation <- subset(section1, str_detect(section1$"Types.of.services", "Adult Education")); head(adultEducation)
artsAndCulture <- subset(section1, str_detect(section1$"Types.of.services", "Arts and Culture")); head(artsAndCulture)
educationK12 <- subset(section1, str_detect(section1$"Types.of.services", "Education")); head(educationK12)
homelessness <- subset(section1, str_detect(section1$"Types.of.services", "Homelessness")); head(homelessness)
humanServices <- subset(section1, str_detect(section1$"Types.of.services", "Human Services")); head(humanServices)
policy <- subset(section1, str_detect(section1$"Types.of.services", "Policy")); head(policy)
other <- subset(section1, str_detect(section1$"Types.of.services", "Other")); head(other)
internetYes <- subset(section1, str_detect(section1$"Clients.require.internet", "Yes")); head(internetYes)
internetNo <- subset(section1, str_detect(section1$"Clients.require.internet", "No")); head(internetNo)
internetMaybe <- subset(section1, str_detect(section1$"Clients.require.internet", "I")); head(internetMaybe)
deviceYes <- subset(section1, str_detect(section1$"Clients.require.device", "Yes")); head(deviceYes)
deviceNo <- subset(section1, str_detect(section1$"Clients.require.device", "No")); head(deviceNo)
deviceMaybe <- subset(section1, str_detect(section1$"Clients.require.device", "I")); head(deviceMaybe)
sufficientAll <- subset(section1, str_detect(section1$"Sufficient.internet", "All")); head(sufficientAll)
sufficientMost <- subset(section1, str_detect(section1$"Sufficient.internet", "Most")); head(sufficientMost)
sufficientSome <- subset(section1, str_detect(section1$"Sufficient.internet", "Some")); head(sufficientSome)
sufficientNone <- subset(section1, str_detect(section1$"Sufficient.internet", "None")); head(sufficientNone)
sufficientIdk <- subset(section1, str_detect(section1$"Sufficient.internet", "I")); head(sufficientAll)
# Section 2 ---------------------------------------------------------------
section1$"Types.of.services"
serviceTypesValues <- 1:length(serviceTypes); serviceTypesValues
for(i in 1:length(serviceTypes)) {
serviceTypesValues[i] <- nrow(subset(section1, str_detect(section1$"Types.of.services", serviceTypes[i])))
}
serviceTypesValues
section1$"Types.of.services"[5]
str_detect(section1$"Types.of.services"[5], "Education")
educationK12 <- subset(section1, str_detect(section1$"Types.of.services", "Education")); head(educationK12)
educationK12 <- subset(section1, str_detect(section1$"Types.of.services", "Education (K-12)")); head(educationK12)
str_detect(section1$"Types.of.services", "Education (K-12)")
str_detect("Education (K-12)", "Education (K-12)")
str_detect("Education (K12)", "Education (K12)")
str_detect("Education K12", "Education K12")
str_detect("Education K12)", "Education K12")
str_detect("Education K12)", "Education K12)")
str_detect("Education (K12)", "Education (K12)")
str_detect("Education (K-12)", "Education (K12)")
str_detect("Education (K-12)", "Education K12")
regexpr(1,1)
regexpr("hey", "hey")
gregexpr("hey", "hey")
regexec("hey", "hey")
grepl("hey", "hey")
grep("hey", "hey")
grep("Education (K-12)", "Education K12")
grep("Education (K-12)", "Education (K-12)")
grepl("Education (K-12)", "Education (K-12)")
# Lucas Pao, ...
# Digital Equity
library(stringr)
# Make sure to reset your working directory to HODP-Digital-Equity
# setwd("~/Desktop/HODP-Digital-Equity")
data <- read.csv("digital equity.csv")
names <- colnames(digitalEquityData); names
colnames(data)[2] <- "Email"
colnames(data)[3] <- "Name"
colnames(data)[4] <- "Organization"
colnames(data)[5] <- "Types.of.services"
colnames(data)[6] <- "Clients.require.internet"
colnames(data)[7] <- "Clients.require.device"
colnames(data)[8] <- "Sufficient.internet"
colnames(data)[21] <- "Number.of.clients"
# Section 1 ---------------------------------------------------------------
section1 <- data[c(1:8, 21)]
as.numeric(section1$"Number.of.clients")
serviceTypes <- c(
"Adult Education",
"Arts and Culture",
"Community, Economic Development, Workfoce",
"Education (K-12)",
"Homelessness",
"Human Services/Mental Health",
"Policy & Advocacy",
"Other"
); serviceTypes
serviceTypesValues <- 1:length(serviceTypes); serviceTypesValues
for(i in 1:length(serviceTypes)) {
serviceTypesValues[i] <- nrow(subset(section1, grepl(section1$"Types.of.services", serviceTypes[i])))
}
serviceTypesValues
grepl("Education (K-12)", "Education (K-12)")
adultEducation <- subset(section1, grepl(section1$"Types.of.services", "Adult Education")); head(adultEducation)
artsAndCulture <- subset(section1, grepl(section1$"Types.of.services", "Arts and Culture")); head(artsAndCulture)
educationK12 <- subset(section1, grepl(section1$"Types.of.services", "Education (K-12)")); head(educationK12)
homelessness <- subset(section1, grepl(section1$"Types.of.services", "Homelessness")); head(homelessness)
humanServices <- subset(section1, grepl(section1$"Types.of.services", "Human Services")); head(humanServices)
policy <- subset(section1, grepl(section1$"Types.of.services", "Policy")); head(policy)
other <- subset(section1, grepl(section1$"Types.of.services", "Other")); head(other)
internetYes <- subset(section1, grepl(section1$"Clients.require.internet", "Yes")); head(internetYes)
internetNo <- subset(section1, grepl(section1$"Clients.require.internet", "No")); head(internetNo)
internetMaybe <- subset(section1, grepl(section1$"Clients.require.internet", "I")); head(internetMaybe)
deviceYes <- subset(section1, grepl(section1$"Clients.require.device", "Yes")); head(deviceYes)
deviceNo <- subset(section1, grepl(section1$"Clients.require.device", "No")); head(deviceNo)
deviceMaybe <- subset(section1, grepl(section1$"Clients.require.device", "I")); head(deviceMaybe)
sufficientAll <- subset(section1, grepl(section1$"Sufficient.internet", "All")); head(sufficientAll)
sufficientMost <- subset(section1, grepl(section1$"Sufficient.internet", "Most")); head(sufficientMost)
sufficientSome <- subset(section1, grepl(section1$"Sufficient.internet", "Some")); head(sufficientSome)
sufficientNone <- subset(section1, grepl(section1$"Sufficient.internet", "None")); head(sufficientNone)
sufficientIdk <- subset(section1, grepl(section1$"Sufficient.internet", "I")); head(sufficientAll)
# Section 2 ---------------------------------------------------------------
sufficientAll <- subset(section1, grepl(section1$"Sufficient.internet", "All")); head(sufficientAll)
sufficientMost <- subset(section1, grepl(section1$"Sufficient.internet", "Most")); head(sufficientMost)
sufficientSome <- subset(section1, grepl(section1$"Sufficient.internet", "Some")); head(sufficientSome)
sufficientNone <- subset(section1, grepl(section1$"Sufficient.internet", "None")); head(sufficientNone)
sufficientIdk <- subset(section1, grepl(section1$"Sufficient.internet", "I")); head(sufficientAll)
# Section 2 ---------------------------------------------------------------
str_detect("Education (K-12)", "Education (K-12)")
barplot(height=serviceTypesValues, names.arg=serviceTypes)
serviceTypesValues
serviceTypesValues <- 1:length(serviceTypes); serviceTypesValues
for(i in 1:length(serviceTypes)) {
serviceTypesValues[i] <- nrow(subset(section1, str_detect(section1$"Types.of.services", serviceTypes[i])))
}
serviceTypesValues
str_detect("Education (K-12)", "Education (K-12)")
barplot(height=serviceTypesValues, names.arg=serviceTypes)
barplot(height=serviceTypesValues, names.arg=serviceTypes, las=2)
barplot(height=serviceTypesValues, names.arg=serviceTypes, las=2, main="What type of services does your organization provide?")
barplot(height=serviceTypesValues, names.arg=serviceTypes, las=2, main="What type of services does your organization provide?", xlab="Frequency")
barplot(height=serviceTypesValues, names.arg=serviceTypes, las=2, main="What type of services does your organization provide?", ylab="Frequency")
barplot(height=internetValues, names.arg=internet, las=2, main="Are you providing services that require that your clients use the internet?", ylab="Frequency")
internet <- c("Yes", "No", "Maybe")
internetValues <- 1:length(internet); internetValues
for(i in 1:length(internet)) {
internetValues[i] <- nrow(subset(section1, str_detect(section1$"Clients.require.internet", internet[i])))
}
# Plots
barplot(height=serviceTypesValues, names.arg=serviceTypes, las=2, main="What type of services does your organization provide?", ylab="Frequency")
barplot(height=internetValues, names.arg=internet, las=2, main="Are you providing services that require that your clients use the internet?", ylab="Frequency")
internet <- c("Yes", "No", "I'm not sure")
internetValues <- 1:length(internet); internetValues
for(i in 1:length(internet)) {
internetValues[i] <- nrow(subset(section1, str_detect(section1$"Clients.require.internet", internet[i])))
}
# Plots
barplot(height=serviceTypesValues, names.arg=serviceTypes, las=2, main="What type of services does your organization provide?", ylab="Frequency")
barplot(height=internetValues, names.arg=internet, las=2, main="Are you providing services that require that your clients use the internet?", ylab="Frequency")
# Plots
barplot(height=serviceTypesValues, names.arg=serviceTypes, las=2, main="What type of services does your organization provide?", ylab="Frequency")
barplot(height=internetValues, names.arg=internet, las=2, main="Are you providing services that require that your clients use the internet?", ylab="Frequency")
barplot(height=deviceValues, names.arg=internet, las=2, main="Are you providing services that require that your clients to use a digital device (computer, tablet, smart phone)?", ylab="Frequency")
device <- c("Yes", "No", "I'm not sure")
deviceValues <- 1:length(device); internetValues
for(i in 1:length(device)) {
deviceValues[i] <- nrow(subset(section1, str_detect(section1$"Clients.require.device", device[i])))
}
# Plots
barplot(height=serviceTypesValues, names.arg=serviceTypes, las=2, main="What type of services does your organization provide?", ylab="Frequency")
barplot(height=internetValues, names.arg=internet, las=2, main="Are you providing services that require that your clients use the internet?", ylab="Frequency")
barplot(height=deviceValues, names.arg=internet, las=2, main="Are you providing services that require that your clients to use a digital device (computer, tablet, smart phone)?", ylab="Frequency")
# Lucas Pao, ...
# Digital Equity
library(stringr)
# Make sure to reset your working directory to HODP-Digital-Equity
# setwd("~/Desktop/HODP-Digital-Equity")
data <- read.csv("digital equity.csv")
names <- colnames(digitalEquityData); names
colnames(data)[2] <- "Email"
colnames(data)[3] <- "Name"
colnames(data)[4] <- "Organization"
colnames(data)[5] <- "Types.of.services"
colnames(data)[6] <- "Clients.require.internet"
colnames(data)[7] <- "Clients.require.device"
colnames(data)[8] <- "Sufficient.internet"
colnames(data)[21] <- "Number.of.clients"
# Section 1 ---------------------------------------------------------------
section1 <- data[c(1:8, 21)]
as.numeric(section1$"Number.of.clients")
serviceTypes <- c(
"Adult Education",
"Arts and Culture",
"Community, Economic Development, Workfoce",
"Education (K-12)",
"Homelessness",
"Human Services/Mental Health",
"Policy & Advocacy",
"Other"
); serviceTypes
serviceTypesValues <- 1:length(serviceTypes); serviceTypesValues
for(i in 1:length(serviceTypes)) {
serviceTypesValues[i] <- nrow(subset(section1, str_detect(section1$"Types.of.services", serviceTypes[i])))
}
internet <- c("Yes", "No", "I'm not sure")
internetValues <- 1:length(internet); internetValues
for(i in 1:length(internet)) {
internetValues[i] <- nrow(subset(section1, str_detect(section1$"Clients.require.internet", internet[i])))
}
device <- c("Yes", "No", "I'm not sure")
deviceValues <- 1:length(device); internetValues
for(i in 1:length(device)) {
deviceValues[i] <- nrow(subset(section1, str_detect(section1$"Clients.require.device", device[i])))
}
sufficient <- c("All", "Most", "Some", "None")
sufficientValues <- 1:length(sufficient); internetValues
for(i in 1:length(sufficient)) {
sufficientValues[i] <- nrow(subset(section1, str_detect(section1$"Sufficient.internet", sufficient[i])))
}
# Plots
barplot(height=serviceTypesValues, names.arg=serviceTypes, las=2, main="What type of services does your organization provide?", ylab="Frequency")
barplot(height=internetValues, names.arg=internet, las=2, main="Are you providing services that require that your clients use the internet?", ylab="Frequency")
barplot(height=deviceValues, names.arg=internet, las=2, main="Are you providing services that require that your clients to use a digital device (computer, tablet, smart phone)?", ylab="Frequency")
barplot(height=sufficientValues, names.arg=internet, las=2, main="Do your clients have sufficient internet connectivity to access services and obtain essentials?", ylab="Frequency")
# Random data cleaning?
adultEducation <- subset(section1, str_detect(section1$"Types.of.services", "Adult Education")); head(adultEducation)
artsAndCulture <- subset(section1, str_detect(section1$"Types.of.services", "Arts and Culture")); head(artsAndCulture)
educationK12 <- subset(section1, str_detect(section1$"Types.of.services", "Education (K-12)")); head(educationK12)
homelessness <- subset(section1, str_detect(section1$"Types.of.services", "Homelessness")); head(homelessness)
humanServices <- subset(section1, str_detect(section1$"Types.of.services", "Human Services")); head(humanServices)
policy <- subset(section1, str_detect(section1$"Types.of.services", "Policy")); head(policy)
other <- subset(section1, str_detect(section1$"Types.of.services", "Other")); head(other)
internetYes <- subset(section1, str_detect(section1$"Clients.require.internet", "Yes")); head(internetYes)
internetNo <- subset(section1, str_detect(section1$"Clients.require.internet", "No")); head(internetNo)
internetMaybe <- subset(section1, str_detect(section1$"Clients.require.internet", "I")); head(internetMaybe)
deviceYes <- subset(section1, str_detect(section1$"Clients.require.device", "Yes")); head(deviceYes)
deviceNo <- subset(section1, str_detect(section1$"Clients.require.device", "No")); head(deviceNo)
deviceMaybe <- subset(section1, str_detect(section1$"Clients.require.device", "I")); head(deviceMaybe)
sufficientAll <- subset(section1, str_detect(section1$"Sufficient.internet", "All")); head(sufficientAll)
sufficientMost <- subset(section1, str_detect(section1$"Sufficient.internet", "Most")); head(sufficientMost)
sufficientSome <- subset(section1, str_detect(section1$"Sufficient.internet", "Some")); head(sufficientSome)
sufficientNone <- subset(section1, str_detect(section1$"Sufficient.internet", "None")); head(sufficientNone)
sufficientIdk <- subset(section1, str_detect(section1$"Sufficient.internet", "I")); head(sufficientAll)
# Section 2 ---------------------------------------------------------------
barplot(height=sufficientValues, names.arg=internet, las=2, main="Do your clients have sufficient internet connectivity to access services and obtain essentials?", ylab="Frequency")
sufficientValues <- 1:length(sufficient); sufficientValues
for(i in 1:length(sufficient)) {
sufficientValues[i] <- nrow(subset(section1, str_detect(section1$"Sufficient.internet", sufficient[i])))
}
sufficientValues
# Plots
barplot(height=serviceTypesValues, names.arg=serviceTypes, las=2, main="What type of services does your organization provide?", ylab="Frequency")
barplot(height=internetValues, names.arg=internet, las=2, main="Are you providing services that require that your clients use the internet?", ylab="Frequency")
barplot(height=deviceValues, names.arg=device, las=2, main="Are you providing services that require that your clients to use a digital device (computer, tablet, smart phone)?", ylab="Frequency")
barplot(height=sufficientValues, names.arg=sufficient, las=2, main="Do your clients have sufficient internet connectivity to access services and obtain essentials?", ylab="Frequency")
source('~/Desktop/Clubs/HODP/HODP-Digital-Equity/NewCharts.R', echo=TRUE)
source('~/Desktop/Clubs/HODP/HODP-Digital-Equity/NewCharts.R', echo=TRUE)
source('~/Desktop/Clubs/HODP/HODP-Digital-Equity/NewCharts.R', echo=TRUE)
source('~/Desktop/Clubs/HODP/HODP-Digital-Equity/NewCharts.R', echo=TRUE)
source('~/Desktop/Clubs/HODP/HODP-Digital-Equity/NewCharts.R', echo=TRUE)
source('~/Desktop/Clubs/HODP/HODP-Digital-Equity/NewCharts.R', echo=TRUE)
source('~/Desktop/Clubs/HODP/HODP-Digital-Equity/NewCharts.R', echo=TRUE)
source('~/Desktop/Clubs/HODP/HODP-Digital-Equity/NewCharts.R', echo=TRUE)
source('~/Desktop/Clubs/HODP/HODP-Digital-Equity/NewCharts.R', echo=TRUE)
source('~/Desktop/Clubs/HODP/HODP-Digital-Equity/NewCharts.R', echo=TRUE)
source('~/Desktop/Clubs/HODP/HODP-Digital-Equity/NewCharts.R', echo=TRUE)
